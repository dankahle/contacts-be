{
  "swagger": "2.0",
  "info": {
    "description": "Rest API for the contacts application.",
    "version": "1.0.0",
    "title": "Contacts API",
    "contact": {
      "email": "dan.kahle@gmail.com"
    }
  },
  "externalDocs": {
    "description": "github repo",
    "url": "https://github.com/dankahle/contacts-be"
  },
  "host": "dankfix: add heroku url her",
  "basePath": "/v2",
  "tags": [
    {
      "name": "contacts",
      "description": "contact endpoints"
    },
    {
      "name": "users",
      "description": "contact endpoints"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "get all contacts",
        "description": "return all contacts",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "../../api/contacts/schema/schema.json"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "contacts"
        ],
        "summary": "add contact",
        "description": "add a new contact",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "contact object",
            "required": true,
            "schema": {
              "$ref": "../../api/contacts/schema/schemaPost.json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "../../api/contacts/schema/schema.json"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "contacts"
        ],
        "summary": "get one contact",
        "description": "return one contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "contact id",
            "required": true,
            "type": "string",
            "format": "guid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "../../api/contacts/schema/schema.json"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      },
      "put": {
        "tags": [
          "contacts"
        ],
        "summary": "update contact",
        "description": "update a contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "contact id",
            "required": true,
            "type": "string",
            "format": "guid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "contact object",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "guid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "$ref": "../../api/contacts/schema/schema.json"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "../../api/contacts/schema/schema.json"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      },
      "delete": {
        "tags": [
          "contacts"
        ],
        "summary": "delete contact",
        "description": "delete a contact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "contact id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "../../api/contacts/schema/schema.json"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "Contact not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get all users",
        "description": "return all users",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "../../api/users/schema/schema.json"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "add users",
        "description": "add a new users",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "users object",
            "required": true,
            "schema": {
              "$ref": "../../api/users/schema/schemaPost.json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "../../api/users/schema/schema.json"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "get one users",
        "description": "return one users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "users id",
            "required": true,
            "type": "string",
            "format": "guid"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "../../api/users/schema/schema.json"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "update users",
        "description": "update a users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "users id",
            "required": true,
            "type": "string",
            "format": "guid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "users object",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "guid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "$ref": "../../api/users/schema/schema.json"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "../../api/users/schema/schema.json"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "delete users",
        "description": "delete a users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "users id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "../../api/users/schema/schema.json"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
